{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Helmet from\"react-helmet\";import ThumbNail from\"../thumbnail/thumbnail\";import LgThumbNail from\"../lg-thumbnail/lg-thumbnail\";import NavBar from\"../navbar/nav-bar\";import\"../../style-sheets/portfolio.css\";import data from\"../../data/ux-data\";import FooterNav from\"../footer-nav/footer-nav\";var UXDesigns=/*#__PURE__*/function(_Component){_inherits(UXDesigns,_Component);var _super=_createSuper(UXDesigns);function UXDesigns(props){var _this;_classCallCheck(this,UXDesigns);_this=_super.call(this,props);_this.getData=function(data){//Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n_this.setState({selected:1,dataFromThumbnail:data});};_this.handleCloseLgThumbnail=function(update){console.log(\"from lg-thumbnail\",update);_this.setState({selected:update});};_this.state={//State holds all UX the data for the <ThumbNail /> component. This is passed as a Prop.\nselected:0,dataFromThumbnail:\"\",ux:data};return _this;}_createClass(UXDesigns,[{key:\"render\",// FIX: <lg-thumbnail /> element rendering issue\nvalue:function render(){var _this2=this;var _this$state=this.state,ux=_this$state.ux,selected=_this$state.selected,dataFromThumbnail=_this$state.dataFromThumbnail;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"Portfolio - UX Designs\"),/*#__PURE__*/React.createElement(\"meta\",{name:\"description\",content:\"UX designers produced for projects\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"page-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"page-width\"},selected?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(NavBar,null)),/*#__PURE__*/React.createElement(\"main\",{className:\"main-wrapper\"},/*#__PURE__*/React.createElement(\"h1\",null,\"UX Designs\"),/*#__PURE__*/React.createElement(\"h3\",null,\"2019\"),/*#__PURE__*/React.createElement(LgThumbNail,{dataFromThumbnail:dataFromThumbnail,closeLgThumbnail:this.handleCloseLgThumbnail}),/*#__PURE__*/React.createElement(\"section\",{className:\"elements-wrapper\"}),/*#__PURE__*/React.createElement(\"section\",{className:\"elements-wrapper\"},ux.map(function(ux){return/*#__PURE__*/ (//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\nReact.createElement(ThumbNail,{key:ux.key,id:ux.id,type:ux.type,img:ux.img,name:ux.name,desc:ux.desc,role:ux.role,tech:ux.tech,challenge:ux.challenge,solution:ux.solution,source:ux.source,getData:_this2.getData}));}))),/*#__PURE__*/React.createElement(FooterNav,{isFooter:true})):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(NavBar,null)),/*#__PURE__*/React.createElement(\"main\",{className:\"main-wrapper\"},/*#__PURE__*/React.createElement(\"h1\",null,\"UX Designs\"),/*#__PURE__*/React.createElement(\"h3\",null,\"2019\"),/*#__PURE__*/React.createElement(\"section\",{className:\"elements-wrapper\"},ux.map(function(ux){return/*#__PURE__*/ (//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\nReact.createElement(ThumbNail,{key:ux.key,id:ux.id,type:ux.type,img:ux.img,name:ux.name,desc:ux.desc,role:ux.role,tech:ux.tech,challenge:ux.challenge,solution:ux.solution,source:ux.source,getData:_this2.getData}));}))),/*#__PURE__*/React.createElement(FooterNav,{isFooter:true})))));}}]);return UXDesigns;}(Component);export default UXDesigns;","map":{"version":3,"sources":["C:/Users/user/Desktop/portfolio-master/portfolio/client/src/components/ux-designs/ux-designs.js"],"names":["React","Component","Helmet","ThumbNail","LgThumbNail","NavBar","data","FooterNav","UXDesigns","props","getData","setState","selected","dataFromThumbnail","handleCloseLgThumbnail","update","console","log","state","ux","map","key","id","type","img","name","desc","role","tech","challenge","solution","source"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport ThumbNail from \"../thumbnail/thumbnail\";\nimport LgThumbNail from \"../lg-thumbnail/lg-thumbnail\";\nimport NavBar from \"../navbar/nav-bar\";\n\nimport \"../../style-sheets/portfolio.css\";\n\nimport data from \"../../data/ux-data\";\nimport FooterNav from \"../footer-nav/footer-nav\";\n\nclass UXDesigns extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t//State holds all UX the data for the <ThumbNail /> component. This is passed as a Prop.\n\t\t\tselected: 0,\n\t\t\tdataFromThumbnail: \"\",\n\t\t\tux: data,\n\t\t};\n\t}\n\n\tgetData = (data) => {\n\t\t//Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n\t\tthis.setState({ selected: 1, dataFromThumbnail: data });\n\t};\n\n\thandleCloseLgThumbnail = (update) => {\n\t\tconsole.log(\"from lg-thumbnail\", update);\n\t\tthis.setState({ selected: update });\n\t};\n\t// FIX: <lg-thumbnail /> element rendering issue\n\trender() {\n\t\tconst { ux, selected, dataFromThumbnail } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Portfolio - UX Designs</title>\n\t\t\t\t\t<meta\n\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\tcontent=\"UX designers produced for projects\"\n\t\t\t\t\t/>\n\t\t\t\t</Helmet>\n\t\t\t\t<div className=\"page-wrapper\">\n\t\t\t\t\t<div className=\"page-width\">\n\t\t\t\t\t\t{selected ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* This is used to render single page items on Pop up or nav dropdown selections*/}\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t<h1>UX Designs</h1>\n\t\t\t\t\t\t\t\t\t<h3>2019</h3>\n\t\t\t\t\t\t\t\t\t<LgThumbNail\n\t\t\t\t\t\t\t\t\t\tdataFromThumbnail={dataFromThumbnail}\n\t\t\t\t\t\t\t\t\t\tcloseLgThumbnail={\n\t\t\t\t\t\t\t\t\t\t\tthis.handleCloseLgThumbnail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\tclassName={\"elements-wrapper\"}\n\t\t\t\t\t\t\t\t\t></section>\n\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t{ux.map((ux) => (\n\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ux.key}\n\t\t\t\t\t\t\t\t\t\t\t\tid={ux.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={ux.type}\n\t\t\t\t\t\t\t\t\t\t\t\timg={ux.img}\n\t\t\t\t\t\t\t\t\t\t\t\tname={ux.name}\n\t\t\t\t\t\t\t\t\t\t\t\tdesc={ux.desc}\n\t\t\t\t\t\t\t\t\t\t\t\trole={ux.role}\n\t\t\t\t\t\t\t\t\t\t\t\ttech={ux.tech}\n\t\t\t\t\t\t\t\t\t\t\t\tchallenge={ux.challenge}\n\t\t\t\t\t\t\t\t\t\t\t\tsolution={ux.solution}\n\t\t\t\t\t\t\t\t\t\t\t\tsource={ux.source}\n\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t<FooterNav isFooter={true} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* This is used to render large pop modal items on click*/}\n\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t<h1>UX Designs</h1>\n\t\t\t\t\t\t\t\t\t<h3>2019</h3>\n\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t{ux.map((ux) => (\n\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ux.key}\n\t\t\t\t\t\t\t\t\t\t\t\tid={ux.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={ux.type}\n\t\t\t\t\t\t\t\t\t\t\t\timg={ux.img}\n\t\t\t\t\t\t\t\t\t\t\t\tname={ux.name}\n\t\t\t\t\t\t\t\t\t\t\t\tdesc={ux.desc}\n\t\t\t\t\t\t\t\t\t\t\t\trole={ux.role}\n\t\t\t\t\t\t\t\t\t\t\t\ttech={ux.tech}\n\t\t\t\t\t\t\t\t\t\t\t\tchallenge={ux.challenge}\n\t\t\t\t\t\t\t\t\t\t\t\tsolution={ux.solution}\n\t\t\t\t\t\t\t\t\t\t\t\tsource={ux.source}\n\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t<FooterNav isFooter={true} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default UXDesigns;\n"]},"metadata":{},"sourceType":"module"}