{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\src\\\\components\\\\projects\\\\Projects.js\";\nimport React, { Component, lazy, Suspense } from \"react\"; // import ThumbNail from \"../thumbnail/thumbnail\";\n\nimport LgThumbNail from \"../lg-thumbnail/lg-thumbnail\";\nimport NavBar from \"../navbar/nav-bar\";\nimport \"../../style-sheets/portfolio.css\";\nimport Helmet from \"react-helmet\";\nimport FooterNav from \"../footer-nav/footer-nav\";\nimport data from \"../../data/project-data\";\nconst ThumbNail = lazy(() => import(\"../thumbnail/thumbnail\"));\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = data => {\n      //Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n      this.setState({\n        selected: 1,\n        dataFromThumbnail: data\n      });\n    };\n\n    this.handleCloseLgThumbnail = update => {\n      console.log(\"from lg-thumbnail\", update);\n      this.setState({\n        selected: update\n      });\n    };\n\n    this.state = {\n      //State holds all UX the data for the <ThumbNail /> component. This is passed as a Prop.\n      selected: 0,\n      dataFromThumbnail: 0,\n      projects: data\n    };\n  }\n\n  render() {\n    const {\n      projects,\n      selected,\n      dataFromThumbnail\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(images[0]), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, \"Portfolio - Projects\"), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Portfolio Projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"icon\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, selected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Projects\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"2019\"), /*#__PURE__*/React.createElement(LgThumbNail, {\n      dataFromThumbnail: dataFromThumbnail,\n      closeLgThumbnail: this.handleCloseLgThumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, projects.map(project =>\n    /*#__PURE__*/\n    //data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n    React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail-page-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ThumbNail, {\n      key: project.key,\n      id: project.id,\n      type: project.type,\n      img: project.img,\n      name: project.name,\n      desc: project.desc,\n      role: project.role,\n      tech: project.tech,\n      challenge: project.challenge,\n      solution: project.solution,\n      source: project.source,\n      getData: this.getData,\n      getData: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }))))), /*#__PURE__*/React.createElement(FooterNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Projects\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"2019\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, projects.map(project =>\n    /*#__PURE__*/\n    //data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n    React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail-page-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ThumbNail, {\n      key: project.key,\n      id: project.id,\n      type: project.type,\n      img: project.img,\n      name: project.name,\n      desc: project.desc,\n      role: project.role,\n      tech: project.tech,\n      challenge: project.challenge,\n      solution: project.solution,\n      source: project.source,\n      getData: this.getData,\n      getData: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(FooterNav, {\n      isFooter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 10\n      }\n    }))))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/user/Desktop/portfolio-master/portfolio/src/components/projects/Projects.js"],"names":["React","Component","lazy","Suspense","LgThumbNail","NavBar","Helmet","FooterNav","data","ThumbNail","Projects","constructor","props","getData","setState","selected","dataFromThumbnail","handleCloseLgThumbnail","update","console","log","state","projects","render","images","map","project","key","id","type","img","name","desc","role","tech","challenge","solution","source"],"mappings":"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","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\n// import ThumbNail from \"../thumbnail/thumbnail\";\n\nimport LgThumbNail from \"../lg-thumbnail/lg-thumbnail\";\nimport NavBar from \"../navbar/nav-bar\";\nimport \"../../style-sheets/portfolio.css\";\nimport Helmet from \"react-helmet\";\n\nimport FooterNav from \"../footer-nav/footer-nav\";\nimport data from \"../../data/project-data\";\n\nconst ThumbNail = lazy(() => import(\"../thumbnail/thumbnail\"));\n\nclass Projects extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t//State holds all UX the data for the <ThumbNail /> component. This is passed as a Prop.\n\t\t\tselected: 0,\n\t\t\tdataFromThumbnail: 0,\n\t\t\tprojects: data,\n\t\t};\n\t}\n\n\tgetData = (data) => {\n\t\t//Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n\t\tthis.setState({ selected: 1, dataFromThumbnail: data });\n\t};\n\n\thandleCloseLgThumbnail = (update) => {\n\t\tconsole.log(\"from lg-thumbnail\", update);\n\t\tthis.setState({ selected: update });\n\t};\n\n\trender() {\n\t\tconst { projects, selected, dataFromThumbnail } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t{console.log(images[0])}\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Portfolio - Projects</title>\n\t\t\t\t\t<meta name=\"description\" content=\"Portfolio Projects\" />\n\t\t\t\t\t<link rel=\"icon\" href=\"#\" />\n\t\t\t\t</Helmet>\n\t\t\t\t<>\n\t\t\t\t\t<div className={\"page-wrapper\"}>\n\t\t\t\t\t\t<div className=\"page-width\">\n\t\t\t\t\t\t\t{selected ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{/* This is used to render single page items on Pop up or nav dropdown selections*/}\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"h1\">Projects</h1>\n\t\t\t\t\t\t\t\t\t\t<h3>2019</h3>\n\t\t\t\t\t\t\t\t\t\t<LgThumbNail\n\t\t\t\t\t\t\t\t\t\t\tdataFromThumbnail={\n\t\t\t\t\t\t\t\t\t\t\t\tdataFromThumbnail\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcloseLgThumbnail={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleCloseLgThumbnail\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\t\tclassName={\"elements-wrapper\"}\n\t\t\t\t\t\t\t\t\t\t></section>\n\t\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t\t{projects.map((project) => (\n\t\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"thumbnail-page-wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={project.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={project.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={project.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timg={project.img}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={project.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesc={project.desc}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole={project.role}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttech={project.tech}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchallenge={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproject.challenge\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsolution={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproject.solution\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource={project.source}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t\t<FooterNav />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{/* This is used to render large pop modal items on click*/}\n\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t<h1>Projects</h1>\n\t\t\t\t\t\t\t\t\t\t<h3>2019</h3>\n\t\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t\t{projects.map((project) => (\n\t\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"thumbnail-page-wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={project.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={project.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={project.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\timg={project.img}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={project.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdesc={project.desc}\n\t\t\t\t\t\t\t\t\t\t\t\t\trole={project.role}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttech={project.tech}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchallenge={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tproject.challenge\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsolution={project.solution}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource={project.source}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t\t<FooterNav isFooter={true} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}