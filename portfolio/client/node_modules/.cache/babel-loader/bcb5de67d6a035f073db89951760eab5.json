{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\src\\\\components\\\\courses\\\\courses.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"../navbar/nav-bar\";\nimport ThumbNail from \"../thumbnail/thumbnail\";\nimport LgThumbNail from \"../lg-thumbnail/lg-thumbnail\";\nimport Helmet from \"react-helmet\";\nimport \"../../style-sheets/portfolio.css\";\nimport data from \"../../data/course-data.json\";\nimport FooterNav from \"../footer-nav/footer-nav\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = data => {\n      //Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n      this.setState({\n        selected: 1,\n        dataFromThumbnail: data\n      });\n    };\n\n    this.handleCloseLgThumbnail = update => {\n      console.log(\"from lg-thumbnail\", update);\n      this.setState({\n        selected: update\n      });\n    };\n\n    this.state = {\n      imgIndex: 0,\n      selected: 0,\n      courses: data,\n      dataFromThumbnail: \"\"\n    };\n  } //FIX: Add Courses completed Page: JS 30, FreeCodeCamp, SoloLearn, CYF Challenges\n\n\n  render() {\n    const {\n      selected,\n      courses,\n      dataFromThumbnail\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }\n    }, \"Portfolio - Courses\"), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Course and Educational programmes completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }, selected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }\n    }, \"Courses\"), /*#__PURE__*/React.createElement(LgThumbNail, {\n      dataFromThumbnail: dataFromThumbnail,\n      closeLgThumbnail: this.handleCloseLgThumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }\n    }, courses.map(course =>\n    /*#__PURE__*/\n    //data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n    React.createElement(ThumbNail, {\n      key: course.key,\n      id: course.id,\n      type: course.type,\n      img: course.img,\n      name: course.name,\n      desc: course.desc,\n      role: course.role,\n      tech: course.tech,\n      challenge: course.challenge,\n      solution: course.solution,\n      source: course.source,\n      getData: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    })))), /*#__PURE__*/React.createElement(FooterNav, {\n      isFooter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    }, \"Courses\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"elements-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }, courses.map(course =>\n    /*#__PURE__*/\n    //data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n    React.createElement(ThumbNail, {\n      key: course.key,\n      id: course.id,\n      type: course.type,\n      img: course.img,\n      name: course.name,\n      desc: course.desc,\n      role: course.role,\n      tech: course.tech,\n      challenge: course.challenge,\n      solution: course.solution,\n      source: course.source,\n      getData: this.getData,\n      getData: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    })))), /*#__PURE__*/React.createElement(FooterNav, {\n      isFooter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    })))));\n  }\n\n}\n\nexport default Courses;","map":{"version":3,"sources":["C:/Users/user/Desktop/portfolio-master/portfolio/src/components/courses/courses.js"],"names":["React","Component","NavBar","ThumbNail","LgThumbNail","Helmet","data","FooterNav","Courses","constructor","props","getData","setState","selected","dataFromThumbnail","handleCloseLgThumbnail","update","console","log","state","imgIndex","courses","render","map","course","key","id","type","img","name","desc","role","tech","challenge","solution","source"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"../navbar/nav-bar\";\nimport ThumbNail from \"../thumbnail/thumbnail\";\nimport LgThumbNail from \"../lg-thumbnail/lg-thumbnail\";\nimport Helmet from \"react-helmet\";\n\nimport \"../../style-sheets/portfolio.css\";\n\nimport data from \"../../data/course-data.json\";\nimport FooterNav from \"../footer-nav/footer-nav\";\n\nclass Courses extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timgIndex: 0,\n\t\t\tselected: 0,\n\t\t\tcourses: data,\n\t\t\tdataFromThumbnail: \"\",\n\t\t};\n\t}\n\t//FIX: Add Courses completed Page: JS 30, FreeCodeCamp, SoloLearn, CYF Challenges\n\tgetData = (data) => {\n\t\t//Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n\t\tthis.setState({ selected: 1, dataFromThumbnail: data });\n\t};\n\n\thandleCloseLgThumbnail = (update) => {\n\t\tconsole.log(\"from lg-thumbnail\", update);\n\t\tthis.setState({ selected: update });\n\t};\n\n\trender() {\n\t\tconst { selected, courses, dataFromThumbnail } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Portfolio - Courses</title>\n\t\t\t\t\t<meta\n\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\tcontent=\"Course and Educational programmes completed\"\n\t\t\t\t\t/>\n\t\t\t\t</Helmet>\n\t\t\t\t<div className=\"page-wrapper\">\n\t\t\t\t\t<div className=\"page-width\">\n\t\t\t\t\t\t{selected ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* This is used to render single page items on Pop up or nav dropdown selections*/}\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t<h1>Courses</h1>\n\t\t\t\t\t\t\t\t\t<LgThumbNail\n\t\t\t\t\t\t\t\t\t\tdataFromThumbnail={dataFromThumbnail}\n\t\t\t\t\t\t\t\t\t\tcloseLgThumbnail={\n\t\t\t\t\t\t\t\t\t\t\tthis.handleCloseLgThumbnail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\tclassName={\"elements-wrapper\"}\n\t\t\t\t\t\t\t\t\t></section>\n\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t{courses.map((course) => (\n\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\tkey={course.key}\n\t\t\t\t\t\t\t\t\t\t\t\tid={course.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={course.type}\n\t\t\t\t\t\t\t\t\t\t\t\timg={course.img}\n\t\t\t\t\t\t\t\t\t\t\t\tname={course.name}\n\t\t\t\t\t\t\t\t\t\t\t\tdesc={course.desc}\n\t\t\t\t\t\t\t\t\t\t\t\trole={course.role}\n\t\t\t\t\t\t\t\t\t\t\t\ttech={course.tech}\n\t\t\t\t\t\t\t\t\t\t\t\tchallenge={course.challenge}\n\t\t\t\t\t\t\t\t\t\t\t\tsolution={course.solution}\n\t\t\t\t\t\t\t\t\t\t\t\tsource={course.source}\n\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t<FooterNav isFooter={true} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* This is used to render large pop modal items on click*/}\n\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<main className={\"main-wrapper\"}>\n\t\t\t\t\t\t\t\t\t<h1>Courses</h1>\n\t\t\t\t\t\t\t\t\t<section className={\"elements-wrapper\"}>\n\t\t\t\t\t\t\t\t\t\t{courses.map((course) => (\n\t\t\t\t\t\t\t\t\t\t\t//data is exported before reaching ThumbNail as ThumbNail will accept data from multiple sources - therefore must be generic.\n\t\t\t\t\t\t\t\t\t\t\t<ThumbNail\n\t\t\t\t\t\t\t\t\t\t\t\tkey={course.key}\n\t\t\t\t\t\t\t\t\t\t\t\tid={course.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={course.type}\n\t\t\t\t\t\t\t\t\t\t\t\timg={course.img}\n\t\t\t\t\t\t\t\t\t\t\t\tname={course.name}\n\t\t\t\t\t\t\t\t\t\t\t\tdesc={course.desc}\n\t\t\t\t\t\t\t\t\t\t\t\trole={course.role}\n\t\t\t\t\t\t\t\t\t\t\t\ttech={course.tech}\n\t\t\t\t\t\t\t\t\t\t\t\tchallenge={course.challenge}\n\t\t\t\t\t\t\t\t\t\t\t\tsolution={course.solution}\n\t\t\t\t\t\t\t\t\t\t\t\tsource={course.source}\n\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t\t<FooterNav isFooter={true} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Courses;\n"]},"metadata":{},"sourceType":"module"}