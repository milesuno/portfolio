{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio-master\\\\portfolio\\\\src\\\\components\\\\lg-thumbnail\\\\lg-thumbnail.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./lg-thumbnail.css\";\nimport CarouselControls from \"../carousel-controls/CarouselControls\";\nimport SinglePageItem from \"../single-page-item/SinglePageItem\";\nimport closeBtn from \"../../data/page-btns/icons8-close-window-48.png\"; //LG THUMBNAIL to become pop up modal with the following details:\n//Image carosel, controls, desc, my role.\n//Stand alone page component will display all the available information on a item.\n//Stand alone page will be linked too from dropdown list or via \"More...\" button in Lg Thumbnail\n//FIX: clicking more should link to  SPI without setting the ovreflow to hidden (or unsetting the overflow)\n\nclass LgThumbNail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = data => {\n      //Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n      const {\n        imgIndex,\n        autoPlay\n      } = data;\n      this.setState({\n        imgIndex,\n        autoPlay\n      });\n    };\n\n    this.descCharLimit = () => {\n      console.log(\"desc in limit\", this.state.desc);\n    };\n\n    this.thumbNailSwitch = () => {\n      console.log(\"onClick\");\n      let selected = this.state.selected;\n\n      if (selected === 0) {\n        selected++; // this.props.getData(this.state); //Send data to SinglePage\n\n        this.setState({\n          selected\n        });\n      } else if (selected === 1) {\n        selected--;\n        this.setState({\n          selected\n        });\n      }\n\n      console.log(\"Selected\", this.state.selected);\n    };\n\n    this.setModalCloseAnimation = () => {\n      const modal = document.querySelector(\".modal-content\");\n      modal.style.setProperty(\"animation\", \"zoom-out 0.15s 1\");\n    };\n\n    this.state = {\n      selected: 0,\n      //if \"more...\" is clicked then render stand alone page\n      imgIndex: 0,\n      autoPlay: \"\",\n      img: this.props.img\n    };\n  }\n\n  componentDidMount() {\n    const body = document.querySelector(\"body\");\n    body.style.setProperty(\"overflow\", \"hidden\");\n    const modal = document.querySelector(\".modal\");\n    const modalContent = document.querySelector(\".modal-content\");\n\n    const setModalAnimationAndCloseModal = () => {\n      this.setModalCloseAnimation(); //timeout allows animation to happen before re-render\n\n      setTimeout(() => {\n        this.props.closeLgThumbnail(0);\n      }, 100);\n    };\n\n    modal.addEventListener(\"click\", setModalAnimationAndCloseModal);\n    modalContent.addEventListener(\"mouseleave\", () => {\n      console.log(\"leave\");\n      return modal.addEventListener(\"click\", setModalAnimationAndCloseModal);\n    }, true);\n    modalContent.addEventListener(\"mouseenter\", () => {\n      console.log(\"enter\");\n      return modal.removeEventListener(\"click\", setModalAnimationAndCloseModal);\n    });\n  }\n\n  componentWillUnmount() {\n    const body = document.querySelector(\"body\");\n    body.style.setProperty(\"overflow\", \"\");\n  }\n\n  render() {\n    const {\n      imgIndex,\n      selected\n    } = this.state;\n    const {\n      id,\n      type,\n      name,\n      img,\n      desc,\n      role,\n      tech,\n      challenge,\n      solution,\n      source\n    } = this.props.dataFromThumbnail;\n    console.log(\"LG thumbnail\", this.state.selected, this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !selected ? /*#__PURE__*/React.createElement(\"template\", {\n      id: \"myModal\",\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, \">\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lg-thumbnail-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"lg-thumbnail-button\",\n      onClick: () => {\n        this.setModalCloseAnimation(); //timeout allows animation to happen before re-render\n\n        setTimeout(() => {\n          this.props.closeLgThumbnail(0);\n        }, 100);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: closeBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lg-thumbnail-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"lg-thumbnail-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }\n    }, name), /*#__PURE__*/React.createElement(\"img\", {\n      src: img[imgIndex],\n      className: \"lg-thumbnail-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 10\n      }\n    }), img.length > 1 ? /*#__PURE__*/React.createElement(CarouselControls, {\n      getData: this.getData,\n      img: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }\n    }), desc ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }\n    }, \"Description:\"), desc) : null, role ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 12\n      }\n    }, \"Role:\"), role) : null, tech ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 12\n      }\n    }, \"Technologies:\"), tech) : null, challenge ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    }, \"Challenge:\"), challenge) : null, solution ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 12\n      }\n    }, \"Solution:\"), solution) : null, source ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 12\n      }\n    }, \"Sources:\"), source.url ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"URL:\", /*#__PURE__*/React.createElement(\"a\", {\n      href: source.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 14\n      }\n    }, source.url)) : null, source.github ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \"Github:\", /*#__PURE__*/React.createElement(\"a\", {\n      href: source.github,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }\n    }, source.github)) : null, source.trello ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Trello:\", /*#__PURE__*/React.createElement(\"a\", {\n      href: source.github,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 14\n      }\n    }, source.trello)) : null) : null)))) : /*#__PURE__*/React.createElement(React.Fragment, null, \"//This is replaces the pop up which means the other items that aren't selected will still be displayed. This in effect still replaces the original thumbnail\", /*#__PURE__*/React.createElement(SinglePageItem // if selected return SinglePageItem\n    , {\n      key: id,\n      img: img,\n      name: name,\n      desc: desc,\n      role: role,\n      tech: tech,\n      challenge: challenge,\n      solution: solution,\n      source: source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default LgThumbNail;","map":{"version":3,"sources":["C:/Users/user/Desktop/portfolio-master/portfolio/src/components/lg-thumbnail/lg-thumbnail.js"],"names":["React","Component","Link","CarouselControls","SinglePageItem","closeBtn","LgThumbNail","constructor","props","getData","data","imgIndex","autoPlay","setState","descCharLimit","console","log","state","desc","thumbNailSwitch","selected","setModalCloseAnimation","modal","document","querySelector","style","setProperty","img","componentDidMount","body","modalContent","setModalAnimationAndCloseModal","setTimeout","closeLgThumbnail","addEventListener","removeEventListener","componentWillUnmount","render","id","type","name","role","tech","challenge","solution","source","dataFromThumbnail","length","url","github","trello"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./lg-thumbnail.css\";\nimport CarouselControls from \"../carousel-controls/CarouselControls\";\nimport SinglePageItem from \"../single-page-item/SinglePageItem\";\nimport closeBtn from \"../../data/page-btns/icons8-close-window-48.png\";\n\n//LG THUMBNAIL to become pop up modal with the following details:\n//Image carosel, controls, desc, my role.\n//Stand alone page component will display all the available information on a item.\n//Stand alone page will be linked too from dropdown list or via \"More...\" button in Lg Thumbnail\n\n//FIX: clicking more should link to  SPI without setting the ovreflow to hidden (or unsetting the overflow)\n\nclass LgThumbNail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: 0, //if \"more...\" is clicked then render stand alone page\n\t\t\timgIndex: 0,\n\t\t\tautoPlay: \"\",\n\t\t\timg: this.props.img,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst body = document.querySelector(\"body\");\n\t\tbody.style.setProperty(\"overflow\", \"hidden\");\n\n\t\tconst modal = document.querySelector(\".modal\");\n\t\tconst modalContent = document.querySelector(\".modal-content\");\n\n\t\tconst setModalAnimationAndCloseModal = () => {\n\t\t\tthis.setModalCloseAnimation();\n\n\t\t\t//timeout allows animation to happen before re-render\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.props.closeLgThumbnail(0);\n\t\t\t}, 100);\n\t\t};\n\n\t\tmodal.addEventListener(\"click\", setModalAnimationAndCloseModal);\n\n\t\tmodalContent.addEventListener(\"mouseleave\", () => {\n\t\t\tconsole.log(\"leave\");\n\n\t\t\treturn modal.addEventListener(\"click\", setModalAnimationAndCloseModal);\n\t\t}, true);\n\n\t\tmodalContent.addEventListener(\"mouseenter\", () => {\n\t\t\tconsole.log(\"enter\");\n\t\t\treturn modal.removeEventListener(\"click\", setModalAnimationAndCloseModal);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst body = document.querySelector(\"body\");\n\t\tbody.style.setProperty(\"overflow\", \"\");\n\t}\n\n\tgetData = (data) => {\n\t\t//Gets data on specified Thumbnail and sends data to be rendered as Lg-Thumbnail\n\t\tconst { imgIndex, autoPlay } = data;\n\t\tthis.setState({ imgIndex, autoPlay });\n\t};\n\t//DELETE? is this code doing anything?\n\n\tdescCharLimit = () => {\n\t\tconsole.log(\"desc in limit\", this.state.desc);\n\t};\n\n\t//DELETE? is this code doing anything?\n\tthumbNailSwitch = () => {\n\t\tconsole.log(\"onClick\");\n\t\tlet selected = this.state.selected;\n\n\t\tif (selected === 0) {\n\t\t\tselected++;\n\t\t\t// this.props.getData(this.state); //Send data to SinglePage\n\t\t\tthis.setState({ selected });\n\t\t} else if (selected === 1) {\n\t\t\tselected--;\n\t\t\tthis.setState({ selected });\n\t\t}\n\n\t\tconsole.log(\"Selected\", this.state.selected);\n\t};\n\n\tsetModalCloseAnimation = () => {\n\t\tconst modal = document.querySelector(\".modal-content\");\n\t\tmodal.style.setProperty(\"animation\", \"zoom-out 0.15s 1\");\n\t};\n\n\trender() {\n\t\tconst { imgIndex, selected } = this.state;\n\t\tconst {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tname,\n\t\t\timg,\n\t\t\tdesc,\n\t\t\trole,\n\t\t\ttech,\n\t\t\tchallenge,\n\t\t\tsolution,\n\t\t\tsource,\n\t\t} = this.props.dataFromThumbnail;\n\t\tconsole.log(\"LG thumbnail\", this.state.selected, this.props);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{!selected ? (\n\t\t\t\t\t<template id=\"myModal\" className=\"modal\">\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className={\"lg-thumbnail-page-wrapper\"}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={\"lg-thumbnail-button\"}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.setModalCloseAnimation();\n\n\t\t\t\t\t\t\t\t\t\t//timeout allows animation to happen before re-render\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.closeLgThumbnail(0);\n\t\t\t\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img src={closeBtn} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div className=\"lg-thumbnail-wrapper\">\n\t\t\t\t\t\t\t\t\t<h1 className={\"lg-thumbnail-title\"}>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={img[imgIndex]}\n\t\t\t\t\t\t\t\t\t\tclassName={\"lg-thumbnail-img\"}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{img.length > 1 ? (\n\t\t\t\t\t\t\t\t\t\t<CarouselControls\n\t\t\t\t\t\t\t\t\t\t\tgetData={this.getData}\n\t\t\t\t\t\t\t\t\t\t\timg={img}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{desc ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Description:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{desc}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{role ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Role:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{role}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{tech ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Technologies:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{tech}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{challenge ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Challenge:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{challenge}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{solution ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Solution:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{solution}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{source ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Sources:</strong>\n\t\t\t\t\t\t\t\t\t\t\t{source.url ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tURL:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={source.url}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{source.url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t{source.github ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tGithub:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={source.github}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{source.github}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t{source.trello ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tTrello:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={source.github}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{source.trello}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t//This is replaces the pop up which means the other\n\t\t\t\t\t\titems that aren't selected will still be displayed. This\n\t\t\t\t\t\tin effect still replaces the original thumbnail\n\t\t\t\t\t\t<SinglePageItem\n\t\t\t\t\t\t\t// if selected return SinglePageItem\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\timg={img}\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tdesc={desc}\n\t\t\t\t\t\t\trole={role}\n\t\t\t\t\t\t\ttech={tech}\n\t\t\t\t\t\t\tchallenge={challenge}\n\t\t\t\t\t\t\tsolution={solution}\n\t\t\t\t\t\t\tsource={source}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default LgThumbNail;\n"]},"metadata":{},"sourceType":"module"}